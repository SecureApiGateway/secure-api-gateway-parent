name: release-prepare-no-maven
run-name: Prepare Release (no maven) '${{ inputs.release_version_number }}'
# Workflow to prepare the release for projects without maven
# - Creates the release tag
# - Push release tag
on:
  workflow_call:
    inputs:
      release_version_number:
        required: true
        type: string
    outputs:
      release_tag_ref:
        description: "Release tag"
        value: ${{ jobs.release_prepare.outputs.release_tag_ref }}
    secrets:
      GIT_COMMIT_USERNAME_BOT:
        required: true
      GIT_COMMIT_AUTHOR_EMAIL_BOT:
        required: true
      release_github_token:
        required: true
env:
  # Set the environment with secrets provided by the caller (secrets section)
  GIT_AUTHOR_NAME: ${{ secrets.GIT_COMMIT_USERNAME_BOT }}
  GIT_AUTHOR_EMAIL: ${{ secrets.GIT_COMMIT_AUTHOR_EMAIL_BOT }}
  GIT_COMMITTER_NAME: ${{ secrets.GIT_COMMIT_USERNAME_BOT }}
  GIT_COMMITTER_EMAIL: ${{ secrets.GIT_COMMIT_AUTHOR_EMAIL_BOT }}

jobs:
  release_prepare:
    name: Release Prepare - No Maven
    runs-on: ubuntu-latest
    # Map the job outputs to step outputs
    outputs:
      release_tag_ref: ${{ steps.create_release_context.outputs.release_tag }}

    steps:
      # https://github.com/actions/checkout
      - name: Checkout Repo
        uses: actions/checkout@v4
        with:
          token: ${{ secrets.release_github_token }}

      # Create tag context variable
      - name: Create Release Context
        id: create_release_context
        run: |
          echo "release_tag=v${{ inputs.release_version_number }}" >> $GITHUB_OUTPUT

      # create the release tag with release version number provided
      - name: Create Release Tag
        run: |
          echo "Creating Release Tag: ${{ steps.create_release_context.outputs.release_tag }}"
          git tag -a ${{ steps.create_release_context.outputs.release_tag }} -m "Tag for release ${{ inputs.release_version_number }}"

      # push tag to remote repository
      - name: Push Tag
        run: |
          git push -f
          