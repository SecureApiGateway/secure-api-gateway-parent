name: release-prepare
run-name: Prepare Release '${{ inputs.release_version_number }}'
on:
  workflow_call:
    inputs:
      release_version_number:
        required: true
        type: string
      java_version:
        required: false
        type: string
        default: '17'
      github_release_user:
        required: true
        type: string
      github_release_email:
        required: true
        type: string
    outputs:
      release_tag_ref:
        description: "Release tag"
        value: ${{ jobs.release_prepare.outputs.release_tag_ref }}
    secrets:
      release_github_token:
        required: true


jobs:
  release_prepare:
    name: Release prepare
    runs-on: ubuntu-latest
    # Map the job outputs to step outputs
    outputs:
      release_tag_ref: ${{ steps.create_release_context.outputs.release_tag }}

    steps:
      # https://github.com/actions/checkout
      - name: Checkout Repo
        uses: actions/checkout@v4
        with:
          token: ${{ secrets.release_github_token }}

      # set java and cache
      - name: Set Java and Maven Cache
        uses: actions/setup-java@v4
        with:
          distribution: 'zulu'
          java-version: ${{ inputs.java_version }}
          architecture: x64
          cache: 'maven'

      # Create tag context variable
      - name: Create Release Context
        id: create_release_context
        run: |
          echo "release_tag=v${{ inputs.release_version_number }}" >> $GITHUB_OUTPUT
          git config --global user.name ${{ inputs.github_release_user }}
          git config --global user.email ${{ inputs.github_release_email }}

      # Release prepare
      # - Change the version in the POM from x-SNAPSHOT to the new version provided for the release_version_number input
      # - Transform the SCM information in the POM to include the final destination of the tag
      # - Bump the version in the POM to a new value, the next development iteration (y-SNAPSHOT)
      - name: Releases
        run: |
          mvn -B release:clean release:prepare -DreleaseVersion=${{ inputs.release_version_number }} -DpushChanges=false

      - name: Create Tag and Push Changes for Next Release
        run: |
          git push origin ${{ steps.create_release_context.outputs.release_tag }}
          git push -f
